# フロントエンド用Cloud Build設定
steps:
  # 依存関係のインストール
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['install', '-g', 'pnpm@10.10.0']
    id: 'install-pnpm'

  # プロジェクト依存関係インストール
  - name: 'node:18'
    entrypoint: 'pnpm'
    args: ['install', '--frozen-lockfile']
    id: 'install-deps'
    waitFor: ['install-pnpm']

  # TypeScriptチェック（完全版）
  - name: 'node:18'
    entrypoint: 'pnpm'
    args: ['run', 'typecheck']
    id: 'typecheck'
    waitFor: ['install-deps']

  # ESLintチェック（完全版）
  - name: 'node:18'
    entrypoint: 'pnpm'
    args: ['run', 'lint']
    id: 'lint'
    waitFor: ['install-deps']

  # ビルドテスト
  - name: 'node:18'
    entrypoint: 'pnpm'
    args: ['run', 'build']
    id: 'build-test'
    waitFor: ['typecheck', 'lint']
  # Dockerイメージをビルド（チェック完了後）
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/trpg-frontend:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/trpg-frontend:latest'
      - '-f'
      - 'apps/frontend/Dockerfile'
      - '.'
    id: 'build-image'
    waitFor: ['build-test']

  # Container Registryにpush
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/trpg-frontend:$COMMIT_SHA'
    id: 'push-image'
    waitFor: ['build-image']

  # latestタグもpush
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/trpg-frontend:latest'
    id: 'push-latest'
    waitFor: ['build-image']

  # Cloud Runにデプロイ
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'trpg-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/trpg-frontend:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'
      - '--concurrency'
      - '80'
      - '--timeout'
      - '300'
    id: 'deploy-frontend'
    waitFor: ['push-image']

# 置換変数
substitutions:
  _REGION: us-central1

# ビルドのタイムアウト設定
timeout: '1200s'

# イメージをContainer Registryに保存
images:
  - 'gcr.io/$PROJECT_ID/trpg-frontend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/trpg-frontend:latest'

# オプション
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'